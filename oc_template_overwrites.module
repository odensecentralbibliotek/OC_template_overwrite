<?php

function oc_template_overwrites_nemid_form_callback ($form, &$form_state) {
   $current_path = $_SESSION['current_path']  ;
   $response = array(
    '#type' => 'ajax',
    '#commands' => array(),
  );

  $form['nemid']['#markup'] = '<a href="/gatewayf/login?destination=' . $current_path . '" >Login med NemID </a>'
      . '<div class="ding-wayf-create-user"><a class="create-user-link" href="/gatewayf/registration/information">Opret bruger</a><br><br><a target="_blank" href="/side/opret-bruger-med-nemid">Se guide til oprettelse.</a></div>';
  $response['#commands'][] = ajax_command_ding_popup('oc_template_overwrites', t('Login via NemID'), $form['nemid']['#markup'], array('refresh' => FALSE));

  return $response;
}
/*
 * Hooks into select modules template registry entries and swaps out with 
 * a position inside this module instead of their original module/templates.
 * allowing us to overwrite the backend functionality without including
 * templates in the admin theme.
 *  
 */
function oc_template_overwrites_theme_registry_alter(&$theme_registry)
{
    if(isset($theme_registry["opening_hours_admin"]))
    {
        $OC_template_repo = drupal_get_path('module','oc_template_overwrites') . "/templates";
        $theme_registry["opening_hours_admin"]["path"] = $OC_template_repo;
    }
    if(isset($theme_registry["file_entity"]))
    {
        $OC_template_repo = "file_entity";
        $ModuleTemplatePath = drupal_get_path('module','oc_template_overwrites') . "/templates";
        $theme_registry["file_entity"]["template"] = $OC_template_repo;
        $theme_registry["file_entity"]["path"] =  $ModuleTemplatePath;	
    }
}
/**
 * Implements hook_permission().
 */
function oc_template_overwrites_permission() {
  return array(
    'administer oc_template_overwrites' => array(
      'title' => t('Administrer oc_template_overwrites'),
      'description' => t('Giver adgang til configuere oc tempate overwrites'),

    )
  );
}
/*
 * 
 */
function  oc_template_overwrites_menu() {
  $items = array();
  $items['admin/settings/oc_template_overwrites'] = array(
    'title' => 'OC Overwrites',
    'description' => 'Configuration af oc digitalpost modul',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('oc_template_overwrites_admin'),
    'access arguments' => array('administer oc_template_overwrites'),
    'file' => 'oc_template_overwrites.admin.inc'
   );
  
  return $items;
}
/*
 * Hook places where we want to inject.
 */
function oc_template_overwrites_preprocess_html(&$page)
{
    //Add javascript if we are on frontpage.
    global $user;
    $cur_path = current_path();
    if($cur_path == "user/" . $user->uid)
    {
       drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/user_profile_attached.js");
    }
    $Path = drupal_get_path('module', 'oc_template_overwrites') . '/js/ting_tablesorter_parsers.js';
    drupal_add_js($Path);
    if(drupal_is_front_page() && variable_get('Place2book_front_ticket_status', 0) == 1) //The setting has been enabled.
    {
        $Path = drupal_get_path('module', 'oc_template_overwrites') . "/js/p2b_frontpagestatus.js";
        drupal_add_js($Path);
    }
    if (arg(0) == 'node' && arg(1) == 'add' || arg(2) == 'edit') {
        //$path = drupal_get_path('module', 'oc_template_overwrites');  
        //drupal_add_js($path . '/js/oc_material_descriptions.js',array('weight' => 999));
    }
    $config = array(
            'nysfyn_link' => variable_get('nysfyn_home_page', ''),
            'is_active' => variable_get('nysfyn_badge_enabled', 0),
            'google_translate_enabled' => variable_get('google_translate_enabled', 0),
            'google_translate_languages' => variable_get('google_translate_languages', 'da,de,en,es,nl,no')
           );
          drupal_add_js(array('oc_template_overwrites' => $config), 'setting');
  
  if(drupal_is_front_page())
    {
    $meta_description = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(     
      'content' => variable_get('description_meta'),
      'name' =>  'description',
    )
  );
      drupal_add_html_head($meta_description, 'meta_description');  
    }        
 // Setup IE meta tag to force IE rendering mode
  $meta_ie_render_engine = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'content' =>  'IE=Edge',
      'http-equiv' => 'X-UA-Compatible',
    )
  );
  // Add header meta tag for IE to head
  drupal_add_html_head($meta_ie_render_engine, 'meta_ie_render_engine');
  if(variable_get('oc_survey_xact_enabled', 0))
  {
       $link_id = variable_get('oc_survey_xact_survey_id', '');
      drupal_add_css("https://popin.survey-xact.dk/popin/popin.css", 'external');
      drupal_add_css(drupal_get_path('module', 'oc_template_overwrites') . "/css/oc_survey_xact.css");
      //drupal_add_js(drupal_get_path('theme', 'latto_odense') . "/js/popintest.js");
      drupal_add_js("https://popin.survey-xact.dk/popin/popin.js", 'external');
      drupal_add_js("https://popin.survey-xact.dk/dynjs/".$link_id."/popin.js", 'external');
      drupal_add_js("https://popin.survey-xact.dk/cookies.js" , 'external');
      
      /*
       * Add js setting.
       */
      drupal_add_js(array('oc_template_overwrites' => array('xact_survey_enabled' => variable_get('oc_survey_xact_enabled', 0))), 'setting');
      drupal_add_js(array('oc_template_overwrites' => array('xact_survey_id' => $link_id)), 'setting');
      
      drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/oc_survey_xact.js");
  }
  /*
   * Insert needed data for custom surveys that are not created with survey xact.
   */
  if(variable_get('oc_custom_survey_enabled',0) && !path_is_admin(current_path()))
  {
      drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/oc_custom_survey.js");
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_enabled' => variable_get('oc_custom_survey_enabled', 0))), 'setting');
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_link' => variable_get('oc_custom_survey_link',0))), 'setting');
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_teaser_html' => variable_get('oc_custom_survey_teaser_html',0))), 'setting');
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_title' => variable_get('oc_custom_survey_title',0))), 'setting');
      
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_start_date' => strtotime(variable_get('oc_custom_survey_start_date',0)))), 'setting');
      drupal_add_js(array('oc_template_overwrites' => array('oc_custom_survey_end_date' => strtotime(variable_get('oc_custom_survey_end_date',0)))), 'setting');
      drupal_add_css(drupal_get_path('module', 'oc_template_overwrites') . "/css/jquery.dialog.overwrites.css");
      drupal_add_library('system', 'jquery.cookie');
  }
}
/*
 * Contains various form alterations.
 */

function oc_template_overwrites_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_profile_form') {
    //dpm($form['#validate']);
    $form['#validate'][] = 'oc_template_overwrites_validate_user_phone';
    $form['#validate'][] = 'oc_template_overwrites_validate_sync_user_email';
    $form['profile_provider_fbs']['field_fbs_mail']['#attributes']['class'][] = 'js-hide';
    /*
    * Add JS
    */
     $form['#attached']['js'] = array(
     drupal_get_path('module', 'oc_template_overwrites') . '/js/user_profile_attached.js',
     );
  }
  elseif($form_id == 'ding_page_node_form')
  {
      /*
       * Add submit handler to ensure if material description fields exists
       * it does now grow automaticly without connected materials.
       */
      $form['#submit'][] = 'oc_template_validate_material_description_list';
       /*
       * Ding news lead length warning
       */
      drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/oc_ting_reference_cover_preview_page.js");
      
      drupal_add_js(array('oc_template_overwrites' => array('oc_ding_news_lead_warning_limit' => variable_get('oc_ding_news_lead_warning_limit', 150) , 'oc_material_img_preview_enabled' => variable_get('oc_material_img_preview_enabled',0))), 'setting');
      /*
       * Add submit handler to ensure if material description fields exists
       * it does now grow automaticly without connected materials.
       */
      $form['#submit'][] = 'oc_template_validate_material_description_list';
        if(variable_get('oc_material_descriptions_enabled',0) && isset($form['field_ding_page_material_descrip']['und']))
        {
                $form['#attached']['css'] = array(
                  drupal_get_path('module', 'oc_template_overwrites') . '/css/material_descriptions.css',
                );

                $form['#attached']['js'] = array(
                  drupal_get_path('module', 'oc_template_overwrites') . '/js/material_descriptions_page.js',
                );
                foreach($form['field_ding_page_material_descrip']['und'] as $index => $elem)
                {
                    if(is_array($elem) && isset($elem['#field_name']) && 
                            $elem['#field_name'] == 'field_ding_page_material_descrip' 
                            && isset($elem['value']) && is_array($elem['value']))
                    {
                        if($form['field_ding_page_material_descrip']['und'][$index]['value']['#default_value'] == ".")
                        {
                            $form['field_ding_page_material_descrip']['und'][$index]['value']['#default_value'] = '';
                        }
                    }
                }
          }
      else
      {
          //Hide the descriptions
           $form['#attached']['css'] = array(
              drupal_get_path('module', 'oc_template_overwrites') . '/css/material_descriptions_disabled.css',
            );
      }
  }
  elseif($form_id == 'ding_news_node_form')
  {
      /*
       * Ding news lead length warning
       */
      drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/oc_ting_reference_cover_preview.js");
      
      drupal_add_js(drupal_get_path('module', 'oc_template_overwrites') ."/js/ding_news_lead_warning.js");
      drupal_add_js(array('oc_template_overwrites' => array('oc_ding_news_lead_warning_limit' => variable_get('oc_ding_news_lead_warning_limit', 150) , 'oc_material_img_preview_enabled' => variable_get('oc_material_img_preview_enabled',0))), 'setting');
      /*
       * Add submit handler to ensure if material description fields exists
       * it does now grow automaticly without connected materials.
       */
      $form['#submit'][] = 'oc_template_validate_material_description_list';
    if(variable_get('oc_material_descriptions_enabled',0) && isset($form['field_ding_news_material_descrip']['und']))
    {
            $form['#attached']['css'] = array(
              drupal_get_path('module', 'oc_template_overwrites') . '/css/material_descriptions.css',
            );

            $form['#attached']['js'] = array(
              drupal_get_path('module', 'oc_template_overwrites') . '/js/material_descriptions.js',
            );
            foreach($form['field_ding_news_material_descrip']['und'] as $index => $elem)
            {
                if(is_array($elem) && isset($elem['#field_name']) && 
                        $elem['#field_name'] == 'field_ding_news_material_descrip' 
                        && isset($elem['value']) && is_array($elem['value']))
                {
                    if($form['field_ding_news_material_descrip']['und'][$index]['value']['#default_value'] == ".")
                    {
                        $form['field_ding_news_material_descrip']['und'][$index]['value']['#default_value'] = '';
                    }
                }
            }
      }
      else
      {
          //Hide the descriptions
           $form['#attached']['css'] = array(
              drupal_get_path('module', 'oc_template_overwrites') . '/css/material_descriptions_disabled.css',
            );
      }
      
      /*
       * Only add button if node is already created.
       */
       if(variable_get('oc_survey_bpi_buttons_enabled',0))
       {
           if(is_array( $form['#attached']['css']))
           {
                $form['#attached']['css'][] = drupal_get_path('module', 'oc_template_overwrites') . '/css/bpi.css';
           }
           else
           {
               //Hide the descriptions
                $form['#attached']['css'] = array(
                   drupal_get_path('module', 'oc_template_overwrites') . '/css/bpi.css',
                 );
           }
          if(isset($form['#node']->nid) && $form['#node']->field_bpi_workflow['und']['0']['value'] != variable_get('oc_bpi_send_to_state_sid',11)
                  && $form['#node']->field_bpi_workflow['und']['0']['value'] != variable_get('oc_bpi_crated_from_state_sid',0)
                  && user_access('bpi push content'))
          {
              
              $form['actions']['submit2'] = array(
                '#type' => 'submit', 
                '#value' => t('Send til bpi'),
                '#validate' => array('oc_template_overwrites_bpi_custom_syndicate'),
                '#submit' => array('node_form_submit'),
                '#weight' => 50
              );
          }
          elseif(isset($form['#node']->nid) && $form['#node']->field_bpi_workflow['und']['0']['value'] == variable_get('oc_bpi_send_to_state_sid',0)
                 && user_access('delete bpi content'))
          {
              $form['actions']['submit2'] = array(
                '#type' => 'submit', 
                '#value' => t('Slet fra bpi'),
                '#validate' => array('oc_template_overwrites_bpi_custom_delete'),
                '#submit' => array('node_form_submit'),
                '#weight' => 50
              );
          }
          elseif(isset($_GET['bpi_id']))
          {
              /*
               * Make sure we give correct state to content created from BPI.
               */
              if(variable_get('oc_bpi_crated_from_state_sid',0) != 0)
              {
                //$form['field_bpi_workflow']['und'][0]['workflow']['#default_value']  = variable_get('oc_bpi_crated_from_state_sid',0);
                $form['field_bpi_workflow']['und'][0]['workflow']['workflow_sid']['#default_value']  = variable_get('oc_bpi_crated_from_state_sid',0);
              }

          }
        }
  }

}
function oc_template_overwrites_bpi_custom_lokal_content(&$form, &$form_state)
{
  
}
function oc_template_overwrites_bpi_custom_syndicate(&$form, &$form_state)
{
    $form_state['values']['field_bpi_workflow']['und']['0']['workflow']['workflow_sid'] = variable_get('oc_bpi_send_to_state_sid',11);
    array_unshift($form_state['submit_handlers'], 'bpi_form_workflow_transition_form_submit');
}
function oc_template_overwrites_bpi_custom_delete(&$form, &$form_state)
{
    $form_state['values']['field_bpi_workflow']['und']['0']['workflow']['workflow_sid'] = variable_get('oc_bpi_delete_state_sid',14);
}
/*
 * Help dennish to eu stats.
 */
function oc_template_overwrites_pathauto_alias_alter(&$alias, $context)
{
    /*
     * Alter the path to be better eu minded.
     */
    if($context['data']['node']->type == "ding_news")
    {
        if($context['data']['node']->field_ding_news_category['und'][0]['tid'] == 140)
        {
            $secured_string = explode('/',$alias);
            $alias = $secured_string[0] . "/eu/" . $secured_string[1];
        }
        /*elseif(strpos($alias, '/eu/') !== false)
        {
            $secured_string = explode('/',$alias);
            $alias = $secured_string[0] . "/" . $secured_string[1];
        }*/
    }
}
/*
 * Make sure the material description lists does not grow unintended beyond
 * the actual count of materials.
 */
function oc_template_validate_material_description_list($form, &$form_state)
{
    /* Get the number of materials and descriptions. remove one to account for
     * add more btn. */
    if(isset($form_state['values']['field_ding_news_material_descrip']))
    {
        $Material_descrip_count = sizeof($form_state['values']['field_ding_news_material_descrip']['und'])-1;
        $Material_count = sizeof($form_state['values']['field_ding_news_materials']['und'])-1;
        for($i = 0; $i < $Material_descrip_count;$i++)
        {
            if(!isset($form_state['values']['field_ding_news_materials']['und'][$i]) || 
                    $form_state['values']['field_ding_news_materials']['und'][$i]['identifier'] == "")
            {
                $form_state['values']['field_ding_news_material_descrip']['und'][$i]['value'] = "";
            }
            elseif(isset($form_state['values']['field_ding_news_materials']['und'][$i]) &&
                   $form_state['values']['field_ding_news_material_descrip']['und'][$i]['value'] == "" )
            {
                /*
                 * Save the user incase they delete all text from input , and
                 * dont set a . to make it save proper. invalidating the list.
                 */
                 $form_state['values']['field_ding_news_material_descrip']['und'][$i]['value'] = ".";
            }
        }
    }
    if(isset($form_state['values']['field_ding_page_material_descrip']))
    {
        $Material_descrip_count = sizeof($form_state['values']['field_ding_page_material_descrip']['und'])-1;
        $Material_count = sizeof($form_state['values']['field_ding_page_materials']['und'])-1;
        for($i = 0; $i < $Material_descrip_count;$i++)
        {
            if(!isset($form_state['values']['field_ding_page_materials']['und'][$i]) || 
                    $form_state['values']['field_ding_page_materials']['und'][$i]['identifier'] == "")
            {
                $form_state['values']['field_ding_page_material_descrip']['und'][$i]['value'] = "";
            }
            elseif(isset($form_state['values']['field_ding_page_materials']['und'][$i]) &&
                   $form_state['values']['field_ding_page_material_descrip']['und'][$i]['value'] == "" )
            {
                /*
                 * Save the user incase they delete all text from input , and
                 * dont set a . to make it save proper. invalidating the list.
                 */
                 $form_state['values']['field_ding_page_material_descrip']['und'][$i]['value'] = ".";
            }
        }
    }
}
/*
 * Validate the phone number used for SMS notifcations
 * Prevent phone number with area codes and enforce 8 char length.
 */
function oc_template_overwrites_validate_user_phone($form, &$form_state)
{
    $errors = array();
    $phone_number = $form_state['values']['profile_provider_fbs']['field_fbs_phone']['und']['0']['value'];
    /*
     * Allow phone number field to be empty in case
     * patrons dont want to attach phone number.
     */	
    if($phone_number == "" && $form_state['values']['profile_provider_fbs']['field_fbs_phone_notification'][0]['und']['value'] == 0)
    {
        return;
    }
    if($phone_number == "" && $form_state['values']['profile_provider_fbs']['field_fbs_phone_notification'][0]['und']['value'] == 1)
    {
        form_set_error('profile_provider_fbs][field_fbs_mobile_phone',t('Cant use sms service without a phone number.'));
        return;
    }
    if(!ctype_digit($phone_number))
    {
        array_push($errors,t('Phone number must be numeric'));
    }
    $phone_lenght = strlen($phone_number);
    if($phone_lenght > 0 && $phone_lenght != 8)
    {
        array_push($errors,t('Phone number must be excactly 8 chars'));
    }
    if ($errors) {
        form_set_error_multiple('profile_provider_fbs][field_fbs_mobile_phone', $errors);
    }
}
function oc_template_overwrites_validate_sync_user_email($form, &$form_state)
{
    $email =  $form_state['values']['mail'];
    $form_state['values']['profile_provider_fbs']['field_fbs_mail']['und']['0']['value'] = $email;
}
/*
 * Helper to set multiple errors for 1 field.
 * http://drupal.stackexchange.com/questions/8327/how-to-set-multiple-error-messages-with-form-set-error
 */
function form_set_error_multiple($name = NULL, $messages = '', $limit_validation_errors = NULL) {
  return form_set_error($name, implode('<br/>', $messages));
}
function oc_template_overwrites_oc_departments()
{
    $data = array();
    $text = variable_get('fbs_search_departments', '');
    
    $tmp = explode(PHP_EOL,$text);
    foreach($tmp as $branch)
    {
        $b = explode('|',$branch);
        if(!empty($b[0]) && !empty($b[1]))
        {
            $data[str_replace(array("\n", "\r"), '',$b[1])] = str_replace(array("\n", "\r"), '',($b[0]));
        }
    }
    return $data;
}